package com.dj.designPattern.singleton.example2;

import java.lang.reflect.Constructor;

class Singleton implements Cloneable{
	
	public static Singleton ins = new Singleton();
	
	private Singleton() {}	
	
	public static Singleton getInstance() {
		return ins;
	}
	
	public Object clone() throws CloneNotSupportedException{
		return super.clone();
	}
	
}
public class SingletonDesignPatternExample2  {

	public static void main(String[] args) throws Exception{
		
		Singleton s1 = Singleton.getInstance();
		Singleton s2 = Singleton.getInstance();

		print("s1",s1);
		print("s2",s2);
		
		//Voilation trough Clone		
		Singleton s3 = (Singleton) s2.clone();
		print("s3",s3);
	}
	
	public static void print(String name, Object o){
		
		System.out.println("Name : "+name +" and HashCode   "+o.hashCode());
		
	}

}
